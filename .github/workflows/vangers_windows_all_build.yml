name: Vangers Windows Build

on: [push, pull_request]

jobs:
  build:
    runs-on: windows-latest

    defaults:
      run:
        shell: msys2 {0}

    env:
      ARCHITECTURE: 64
      FFMPEG_32_SPECIFIC_BUILD_FLAGS: >-
        --disable-lto
        --disable-avx
        --disable-avx2
        --disable-avx512
        --disable-fma4
        --disable-fma3
        --disable-inline-asm

    steps:
      - uses: msys2/setup-msys2@v2
        with:
          msystem: mingw64
          path-type: inherit
          install: |
            unzip
            diffutils
          pacboy: |
            ninja:p
            gcc:p
            SDL2:p
            SDL2_net:p
            cmake:p
            nasm:p
            yasm:p
            make:p
            libogg:p
            libvorbis:p
            ffmpeg:p

      - uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: vange-rs -- install rustup
        if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: "stable"
          target: x86_64-pc-windows-gnu
          default: true

      - name: vange-rs -- configure rustup
        if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
        run: rustup default stable-x86_64-pc-windows-gnu

      - name: vange-rs -- build
        if: steps.vange-rs-cache-build.outputs.cache-hit != 'true'
        run: cargo build --release
        working-directory: vange-rs/lib/ffi

      - name: vange-rs -- copy artifacts to prefix
        run: |
          ls vange-rs/target/release/*
          cp vange-rs/target/release/librusty_vangers.a /mingw64/lib/

      - name: ANGLE/GLES2 -- download
        run: |
          wget -O /mingw64/lib/libGLESv2.dll "https://github.com/lpenguin/libGLESv2-angle/releases/download/v2/libGLESv2.dll"
          wget -O /mingw64/lib/libEGL.dll "https://github.com/lpenguin/libGLESv2-angle/releases/download/v2/libEGL.dll"

      - name: clunk -- download
        run: |
          git clone --depth 1 https://github.com/stalkerg/clunk.git clunk
          echo "CLUNK_SHORT_COMMIT_SHA=$(git -C clunk rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: clunk -- build cache
        id: cache-clunk
        uses: actions/cache@v3
        with:
          path: clunk/build
          key: win${{ env.ARCHITECTURE }}-mingw64-clunk-${{ env.CLUNK_SHORT_COMMIT_SHA }}

      - name: clunk -- create build dir
        if: steps.cache-clunk.outputs.cache-hit != 'true'
        run: mkdir clunk/build

      - name: clunk -- build
        if: steps.cache-clunk.outputs.cache-hit != 'true'
        working-directory: clunk/build
        run: |
          cmake -DCMAKE_INSTALL_PREFIX=/mingw64 -G Ninja ..
          ninja

      - name: clunk -- install
        working-directory: clunk/build
        run: ninja install

      - name: vangers -- create build dir
        run: mkdir build

      - name: vangers -- configure
        working-directory: build
        run: cmake -DCMAKE_BUILD_TYPE=RelWithDebInfo -G Ninja ..

      - name: vangers -- make
        working-directory: build
        run: ninja

      - name: vangers -- pdb
        working-directory: build/src
        run: |
          wget https://github.com/rainers/cv2pdb/releases/download/v0.50/cv2pdb-0.50.zip
          unzip cv2pdb-0.50.zip
          ./cv2pdb.exe vangers.exe vangers.exe vangers${{ env.ARCHITECTURE }}.pdb

      # - name: surmap -- pdb
      #   run: |
      #     ..\src\cv2pdb.exe surmap.exe
      #   working-directory: build/surmap

      - name: vangers -- prepare release folder
        run: |
          mkdir -p vangers/bin
          cp /mingw64/bin/SDL2.dll vangers/bin/
          cp /mingw64/bin/SDL2_net.dll vangers/bin/
          cp /mingw64/bin/avcodec-*.dll vangers/bin/
          cp /mingw64/bin/avformat-*.dll vangers/bin/
          cp /mingw64/bin/avutil-*.dll vangers/bin/
          cp /mingw64/bin/libogg-0.dll vangers/bin/
          cp /mingw64/bin/libvorbis-0.dll vangers/bin/
          cp /mingw64/bin/libvorbisfile-3.dll vangers/bin/
          cp /mingw64/bin/zlib1.dll vangers/bin/
          cp /mingw64/bin/libgcc_s_seh-1.dll vangers/bin/
          cp /mingw64/bin/libstdc++-6.dll vangers/bin/
          cp /mingw64/bin/libwinpthread-1.dll vangers/bin/
          cp /mingw64/lib/libGLESv2.dll vangers/bin
          cp /mingw64/lib/libEGL.dll vangers/bin
          cp clunk/build/libclunk.dll vangers/bin/
          cp build/src/vangers.exe vangers/bin/
          cp build/src/vangers${{ env.ARCHITECTURE }}.pdb vangers/bin/

      - uses: actions/upload-artifact@v3
        with:
          name: Vangers-Release-win${{ env.ARCHITECTURE }}
          path: vangers/bin
